'''
Created on 22 Feb 2013

@author: thomas
'''
import numpy as np
import math as m

def compute(a,c,r,R):
  np.set_printoptions(precision=2)
  
  result = np.linalg.lstsq(a, c)
  print result[0]
  table = np.resize(np.array(0.0), (len(R), len(R[0])))
  
  for y in range(0,len(R)):
    #print len(R[y])
    for x in range(0, len(R[y])):
      cell = r + result[0][y] + result[0][len(R)+x]
      '''+ result[0][len(R) + x]'''
      #print '%d,%d = %.2f' % (y,x,cell)
      if R[y][x] > 0:
        table[y][x] = cell
      ''' + result[y] + result[len(R)+x]'''
  #print table      
  print 'R hat'
  np.set_printoptions(suppress=True)
  print table
  return table


def main2():
  a = np.matrix([[1,0,0,0,0,0,0,0,0,0,1,0,0,0,0],
                 [0,0,1,0,0,0,0,0,0,0,1,0,0,0,0],
                 [0,0,0,0,1,0,0,0,0,0,1,0,0,0,0],
                 [0,0,0,0,0,0,1,0,0,0,1,0,0,0,0],
                 [0,0,0,0,0,0,0,1,0,0,1,0,0,0,0],
                 [1,0,0,0,0,0,0,0,0,0,0,1,0,0,0],
                 [0,1,0,0,0,0,0,0,0,0,0,1,0,0,0],
                 [0,0,1,0,0,0,0,0,0,0,0,1,0,0,0],
                 [0,0,0,0,0,1,0,0,0,0,0,1,0,0,0],
                 [0,0,0,0,0,0,0,0,1,0,0,1,0,0,0],
                 [1,0,0,0,0,0,0,0,0,0,0,0,1,0,0],
                 [0,1,0,0,0,0,0,0,0,0,0,0,1,0,0],
                 [0,0,0,1,0,0,0,0,0,0,0,0,1,0,0],
                 [0,0,0,0,0,0,1,0,0,0,0,0,1,0,0],
                 [0,0,0,0,0,0,0,1,0,0,0,0,1,0,0],
                 [0,0,0,0,0,0,0,0,1,0,0,0,1,0,0],
                 [0,0,0,0,0,0,0,0,0,1,0,0,1,0,0],
                 [0,0,0,1,0,0,0,0,0,0,0,0,0,1,0],
                 [0,0,0,0,1,0,0,0,0,0,0,0,0,1,0],
                 [0,0,0,0,0,1,0,0,0,0,0,0,0,1,0],
                 [0,0,0,0,0,0,1,0,0,0,0,0,0,1,0],
                 [0,0,0,0,0,0,0,0,1,0,0,0,0,1,0],
                 [0,0,0,0,0,0,0,0,0,1,0,0,0,1,0],
                 [0,1,0,0,0,0,0,0,0,0,0,0,0,0,1],
                 [0,0,1,0,0,0,0,0,0,0,0,0,0,0,1],
                 [0,0,0,1,0,0,0,0,0,0,0,0,0,0,1],
                 [0,0,0,0,1,0,0,0,0,0,0,0,0,0,1],
                 [0,0,0,0,0,1,0,0,0,0,0,0,0,0,1],
                 [0,0,0,0,0,0,0,1,0,0,0,0,0,0,1],
                 [0,0,0,0,0,0,0,0,0,1,0,0,0,0,1],
                 ])
  r = 3.67
  c = np.array([5-r,5-r,4-r,3-r,5-r, 4-r,3-r,2-r,3-r,2-r, 4-r,5-r,3-r,3-r,4-r,5-r,5-r, 1-r,4-r,3-r,2-r,4-r,3-r, 4-r,3-r,2-r,5-r,5-r,5-r,4-r])
  
  R = np.array([[5,4,4,0,5], 
                 [0,3,5,3,4],
                 [5,2,0,2,3],
                 [0,2,3,1,2],
                 [4,0,5,4,5],
                 [5,3,0,3,5],
                 [3,2,3,2,0],
                 [5,3,4,0,5],
                 [4,2,5,4,0],
                 [5,0,5,3,4]])
  m.nn
  result = compute(a,c,r,R)
  print 'R ~'
  print R - result
  

if __name__ == '__main__':
    main2()
    #ex4()